on:
    pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    strategy:
      matrix:
        python-version: ["3.11"] # , "3.12"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Do pre-commit checks (black, lint, mypy)
        run: |
          poetry run docker/pre_commit_init.sh
      - name: Test with pytest
        run: |
          poetry run py.test -v --junitxml=pytest.xml
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: '**/pytest*.xml'
          detailed_summary: true
          check_name: 'JUnit report (local)'

  devel_shell:
    runs-on: ubuntu-latest
    steps:
    - uses: pvarki/ci@main
      with:
        dockerfile-target: devel_shell
        image-tag: rasenmaeher_api:devel_shell
